#!/bin/bash

create_config() {
    override="${1:-0}"

    local configPath=$(pwd)/devenv.local.nix

    if [ $override -ne 1 ] && [ -f $configPath ]; then
        read -p "Config file already exists. Override? y/n: " -n 1 -r
        echo
        echo

        if ! [[ $REPLY =~ ^[Yy]$ ]]; then
            exit 0
        fi
    fi

    if test -f "$__PROGRAM_PATH/devenv.template.local.nix"; then
        cp $__PROGRAM_PATH/devenv.template.local.nix $configPath
    else
        cp $__PROGRAM_PATH/devenv.template.nix $configPath
    fi

    if [[ $CONFIG_devenv_useSsl -eq 1 ]]; then
        appProtocol="https"
    else
        appProtocol="http"
    fi

    if [[ $CONFIG_devenv_useVhost -eq 1 ]]; then
        appUrl="${projectName}.dev.localhost"
    else
        appUrl="localhost:$(get_unused_port)"
    fi

    sed -i -e "s/\__APP_PROTOCOL__/$appProtocol/;" $configPath
    sed -i -e "s/\__APP_URL__/$appUrl/;" $configPath

    local portAdminer=$(get_unused_port)
    local portDatabase=$(get_unused_port)
    local portInstaller=$(get_unused_port)
    local portRedis=$(get_unused_port)

    sed -i -e "s/\__ADMINER_PORT__/$portAdminer/;" $configPath
    sed -i -e "s/\__DATABASE_PORT__/$portDatabase/;" $configPath
    sed -i -e "s/\__INSTALLER_PORT__/$portInstaller/;" $configPath
    sed -i -e "s/\__REDIS_PORT__/$portRedis/;" $configPath

    use_state_dir

    local shopwareUrl="${appProtocol}://${appUrl}"
    declare -p appUrl appProtocol shopwareUrl portAdminer portDatabase portInstaller portRedis > $projectName

    print_info "Config location: $configPath"
    echo
    print_info "Your instance will be available at ${shopwareUrl}"
    print_info "Run 'swdev start $projectName' to apply the config."
    echo
    print_info "If this instance is new or updated, run 'composer setup' inside the shell next."
}

